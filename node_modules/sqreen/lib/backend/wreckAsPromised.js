/**
 * Copyright (c) 2016 Sqreen. All Rights Reserved.
 * Please refer to our terms for more information: https://www.sqreen.io/terms.html
 */
'use strict';
const STATUS = require('http').STATUS_CODES;
const Wreck = require('wreck').defaults({
    timeout: 60000,
    json: true
});

const CaList = require('../../ca.crt.json');
const Https = require('https');
Wreck.agents.https = new Https.Agent({ maxSockets: Infinity, ca: CaList });

const writeError = function (code, payload) {

    return {
        code: STATUS[code] || code,
        message: payload
    };
};

const defaultHeaders = {
    accept: 'application/json',
    'content-type': 'application/json'
};

const assignHeaders = function (opt) {

    const original = opt.headers || {};
    return Object.assign(original, defaultHeaders);
};

const handleResponse = function (resolve, reject) {

    return function (err, response, payload) {

        if (err) {
            if (err.isBoom) {
                err.output = err.output || {};
                return reject(writeError(err.output.statusCode, err.output.payload));
            }
            return reject(err);
        }
        if (response.statusCode !== 200) {
            return reject(writeError(response.statusCode, payload));
        }

        return resolve(payload);
    };
};

const GET = function (uri, options) {

    options.headers = assignHeaders(options);

    return new Promise((resolve, reject) => {

        Wreck.get(uri, options, handleResponse(resolve, reject));
    });
};

const POST = function (uri, options, pl) {

    options.headers = assignHeaders(options);

    try {
        if (typeof pl === 'object') {
            pl = JSON.stringify(pl);
        }
    }
    catch (err) {
        return Promise.reject(err);
    }

    options.payload = pl;

    return new Promise((resolve, reject) => {

        Wreck.post(uri, options, handleResponse(resolve, reject));
    });
};

module.exports = { GET, POST };
module.exports._writeError = writeError;
module.exports._assignHeaders = assignHeaders;
module.exports._handleResponse = handleResponse;
