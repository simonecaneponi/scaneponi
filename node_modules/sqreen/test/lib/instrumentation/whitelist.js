'use strict';
const Code = require('code');
const Lab = require('lab');
const lab = exports.lab = Lab.script();

const describe = lab.describe;
const it = lab.it;
const expect = Code.expect;

const WhiteList = require('../../../lib/instrumentation/whitelist');

describe('WhiteList', () => {

    describe('IP', () => {

        it('should test the IP blacklist', { plan: 8 }, (done) => {

            expect(WhiteList.ipIsWhiteListed('127.0.1.1')).to.equal('');

            WhiteList.whitelistTheseIPs(['127.0.0.1', '192.168.0.1/24', '172.0.0.1/16']);

            expect(WhiteList.ipIsWhiteListed('127.0.1.1')).to.equal('');
            expect(WhiteList.ipIsWhiteListed('127.0.0.1')).to.equal('127.0.0.1');
            expect(WhiteList.ipIsWhiteListed('192.168.0.1')).to.equal('192.168.0.1/24');
            expect(WhiteList.ipIsWhiteListed('192.168.1.1')).to.equal('');
            expect(WhiteList.ipIsWhiteListed('172.0.1.1')).to.equal('172.0.0.1/16');
            expect(WhiteList.ipIsWhiteListed('172.1.1.1')).to.equal('');

            WhiteList.whitelistTheseIPs([]);
            expect(WhiteList.ipIsWhiteListed('172.0.1.1')).to.equal('');

            done();
        });
    });

    describe('Path', () => {

        it('should test the Path whitelist', { plan: 6 }, (done) => {

            expect(WhiteList.pathIsWhiteListed('/home')).to.equal('');

            WhiteList.whitelistThesePaths(['/home']);
            expect(WhiteList.pathIsWhiteListed('/home')).to.equal('/home');
            expect(WhiteList.pathIsWhiteListed('/homegfdfgds')).to.equal('/home');
            expect(WhiteList.pathIsWhiteListed('/home/gfdfgds')).to.equal('/home');
            expect(WhiteList.pathIsWhiteListed('/heome/gfdfgds')).to.equal('');

            WhiteList.whitelistThesePaths(['']);
            expect(WhiteList.pathIsWhiteListed('/home')).to.equal('');

            done();
        });
    });

});
