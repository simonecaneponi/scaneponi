/**
 * Copyright (c) 2016 Sqreen. All Rights Reserved.
 * Please refer to our terms for more information: https://www.sqreen.io/terms.html
 */
'use strict';
const Code = require('code');
const Lab = require('lab');
const lab = exports.lab = Lab.script();

const describe = lab.describe;
const it = lab.it;
const expect = Code.expect;

const ReportUtils = require('../../../lib/instrumentation/reportUtil');

describe('ReportUtils', () => {

    describe('mapRequest', () => {

        it('should cover all remaining cases', { plan: 1 }, (done) => {

            expect(ReportUtils.mapRequest({
                __sqreen_uuid: 1,
                url: '/',
                headers: {
                    'user-agent': 'aa',
                    host: 'pony:777',
                    'x-forwarded-for': '10.10.10',
                    referer: 'pony'
                },
                method: 'GET',
                connection: {
                    remotePort: 888,
                    remoteAddress: '10'
                }
            }))
                .to
                .equal({
                    rid: 1,
                    user_agent: 'aa',
                    scheme: 'http',
                    verb: 'GET',
                    host: 'pony:777',
                    port: '777',
                    rport: 888,
                    path: '/',
                    addr: '10.10.10',
                    referer: 'pony'
                });
            done();
        });
    });

    describe('mapRequestParams', () => {

        it('should test when hapi', { plan: 1 }, (done) => {

            const res = ReportUtils.mapRequestParams({
                __sqreen: {
                    hapi: [{
                        value: {
                            payload: 'payload'
                        }
                    }]
                }
            });
            expect(res.body).to.equal('payload');
            done();
        });
    });

    describe('mapRequest', () => {

        it('should test the referer thingy', { plan: 2 }, (done) => {

            const res = ReportUtils.mapRequest({ __sqreen_uuid: 1, headers: { host: 'a', referer: 'pony' } });
            expect(res.rid).to.equal(1);
            expect(res.referer).to.equal('pony');
            done();
        });
    });
});
