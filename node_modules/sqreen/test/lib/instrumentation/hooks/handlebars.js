/**
 * Copyright (c) 2016 Sqreen. All Rights Reserved.
 * Please refer to our terms for more information: https://www.sqreen.io/terms.html
 */
'use strict';
const Code = require('code');
const Lab = require('lab');
const lab = exports.lab = Lab.script();

const describe = lab.describe;
const it = lab.it;
const expect = Code.expect;

const Proxyquire = require('proxyquire');
describe('Hook', () => {

    describe('body-parser', () => {

        it('should make the closures instrumented, and call the cb', { plan: 6 }, (done) => {

            const MockedHook = Proxyquire('../../../../lib/instrumentation/hooks/handlebarsHook', {
                '../sqreenDirector': {
                    update: function (payload) {

                        expect(payload.methodName).to.equal('template');
                        expect(payload.params).to.exist();
                        expect(payload.params.postCbs).to.exist();
                        expect(payload.params.postCbs).to.have.length(1);

                        const cb = payload.params.postCbs[0].method;
                        const res = cb(null, (x) => x + 1);

                        expect(res.status).to.equal('skip');
                        expect(res.newReturnValue(0)).to.equal(1);

                        done();
                    }
                },
                '../patcher': {
                    patchModule: function () {}
                }
            });
            MockedHook({ version: '0.1.0' });
        });
    });
});
