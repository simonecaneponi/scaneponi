/**
 * Copyright (c) 2016 Sqreen. All Rights Reserved.
 * Please refer to our terms for more information: https://www.sqreen.io/terms.html
 */
'use strict';
const Code = require('code');
const Lab = require('lab');
const lab = exports.lab = Lab.script();

const describe = lab.describe;
const it = lab.it;
const expect = Code.expect;

const Hook = '../../../../lib/instrumentation/hooks/hapiHook';
const Proxyquire = require('proxyquire');

describe('Hook hapi', () => {

    it('should hook a hapi server when a connection is created', { plan: 3 }, (done) => {

        const EHook = Proxyquire(Hook, {
            '../functionPatcher': {
                patchFunction: function (holder, key) {

                    holder[key] =  function (request) {

                        expect(request.method).to.equal('get');
                    };
                }
            }
        });

        const Hapi = require('hapi');

        EHook({}, Hapi);

        const server = new Hapi.Server();

        server.connection({});

        server.route({
            method: 'GET',
            path: '/',
            handler: function (request, reply) {

                return reply({ ok: true });
            }
        });

        server.inject({
            method: 'GET',
            url: '/'
        }, (res) => {

            expect(JSON.parse(res.payload)).to.equal({ ok: true });
            done();
        });
    });

    it('should hook a hapi server when a connection is created and cover other cases', { plan: 5 }, (done) => {

        const Module = require('module');
        const file = Module._resolveFilename('hapi', module);
        Module._cache[file] = undefined;
        const EHook = Proxyquire(Hook, {
            '../functionPatcher': {
                patchFunction: function (holder, key) {

                    holder[key] =  function (request) {

                        require('continuation-local-storage').getNamespace('sqreen_session').set('req', null);
                        expect(request.method).to.equal('get');
                    };
                }
            }
        });

        const Hapi = require('hapi');

        EHook({}, Hapi);

        const server = new Hapi.Server();

        server.connection({});

        server.route({
            method: 'GET',
            path: '/',
            handler: function (request, reply) {

                return reply({ ok: true });
            }
        });

        const ns = require('continuation-local-storage').getNamespace('sqreen_session');
        ns.run(() => {

            ns.set('req', {});
            server.inject({
                method: 'GET',
                url: '/'
            }, (res) => {

                expect(JSON.parse(res.payload)).to.equal({ ok: true });
                done();
            });
        });
    });
});
