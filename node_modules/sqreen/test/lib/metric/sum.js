/**
 * Copyright (c) 2016 Sqreen. All Rights Reserved.
 * Please refer to our terms for more information: https://www.sqreen.io/terms.html
 */
'use strict';
const Code = require('code');
const Lab = require('lab');
const lab = exports.lab = Lab.script();
const beforeEach = lab.beforeEach;

const describe = lab.describe;
const it = lab.it;
const expect = Code.expect;

const Metric = require('../../../lib/metric');
const Sum = require('../../../lib/metric/sum');

describe('Metric', () => {

    beforeEach((done) => {

        Metric._clearAllMetrics();
        done();
    });

    describe('Sum', () => {

        it('should create a sum metric', { plan: 4, timeout: 20000 }, (done) => {

            const sum = new Sum({
                kind: 'Sum',
                name: 'login-fail',
                period: 2
            });

            sum.add('key1', 1);
            sum.add('key2', 1);

            expect(Metric.getMetricByName('login-fail')).to.equal(sum);
            setTimeout(() => {

                sum.add('key1', 1);
                sum.add('key1', 1);
                sum.add('key3', 1);
            }, 3000);

            setTimeout(() => {

                sum.process();
                expect(sum.values.map((x) => x.value)).to.equal([{ 'key1': 1, 'key2': 1 }, { 'key1': 2, 'key3': 1 }]);
                expect(sum.observe().map((x) => x.value)).to.equal([{ 'key1': 1, 'key2': 1 }, { 'key1': 2, 'key3': 1 }]);
                expect(sum.values.map((x) => x.value)).to.equal([]);
                done();
            }, 6000);

        });
    });
});
