/**
 * Copyright (c) 2016 Sqreen. All Rights Reserved.
 * Please refer to our terms for more information: https://www.sqreen.io/terms.html
 */
'use strict';
const Code = require('code');
const Lab = require('lab');
const lab = exports.lab = Lab.script();

const describe = lab.describe;
const it = lab.it;
const expect = Code.expect;

const Reader = require('../../../lib/rules/reader');

describe('Rule reader', () => {

    describe('_checkVersion', () => {

        it('should satisfies the min version or not', { plan: 5 }, (done) => {

            expect(Reader._checkVersion('1.0.0', '1.0.0')).to.be.true();
            expect(Reader._checkVersion('1.0.0', '0.9.0', '1.0.1')).to.be.true();
            expect(Reader._checkVersion('1.0.0', '0.9.0', '0.9.5')).to.be.false();
            expect(Reader._checkVersion('1.0.0', '1.2.0', '0.9.5')).to.be.false();
            expect(Reader._checkVersion('1.0.0', '1.9.3')).to.be.false();
            done();
        });
    });

    describe('verifyRule', () => {

        it('should read a rule simply', { plan: 1 }, (done) => {

            const rule = {
                attack_type: 'no_attack',
                block: false,
                description: 'Insert custom Sqreen headers',
                framework: 'Rails',
                hookpoint: {
                    callback_class: 'HeadersInsertCB',
                    klass: 'Rack::Runtime',
                    method: 'call'
                },
                language: 'nodejs',
                name: 'insert_header_rack',
                priority: 99,
                signature: {
                    v0_9: {
                        keys: [
                            'hookpoint',
                            'name',
                            'callbacks',
                            'conditions'
                        ],
                        value: 'MIGHAkFnmeFaKdE05vmp7FLqNPhLk0peJV5w0Icig/nRDU+Bhon5F2vLySTkX8FeIx3FphHhRVMa\ntzhDFfXceq4fKherxQJCANw15ANJX/AHpAGuXNn+uZwW+pmuGt2ZlG7rh1TkYyOTLY3UTjEWVGfV\nK1XeOyZgwp4lB6GRotYZEpcaxchEfisC\n'
                    }
                },
                test: false,
                title: 'Headers insertion'
            };

            expect(Reader.verifyRule(rule)).to.be.true();
            done();
        });

        it('should read a rule simply', { plan: 1 }, (done) => {

            const rule = {
                agent_version: {
                    min: '0.0.0'
                },
                attack_type: 'no_attack',
                block: false,
                description: 'Insert custom Sqreen headers',
                framework: 'Rails',
                hookpoint: {
                    callback_class: 'HeadersInsertCB',
                    klass: 'Rack::Runtime',
                    method: 'call'
                },
                language: 'nodejs',
                name: 'insert_header_rack',
                priority: 99,
                signature: {
                    v0_9: {
                        keys: [
                            'hookpoint',
                            'name',
                            'callbacks',
                            'conditions'
                        ],
                        value: 'MIGHAkFnmeFaKdE05vmp7FLqNPhLk0peJV5w0Icig/nRDU+Bhon5F2vLySTkX8FeIx3FphHhRVMa\ntzhDFfXceq4fKherxQJCANw15ANJX/AHpAGuXNn+uZwW+pmuGt2ZlG7rh1TkYyOTLY3UTjEWVGfV\nK1XeOyZgwp4lB6GRotYZEpcaxchEfisC\n'
                    }
                },
                test: false,
                title: 'Headers insertion'
            };

            expect(Reader.verifyRule(rule)).to.be.true();
            done();
        });

        it('should read a rule simply without signature check', { plan: 1 }, (done) => {

            const rule = {
                agent_version: {
                    min: '0.0.0'
                },
                attack_type: 'no_attack',
                block: false,
                description: 'Insert custom Sqreen headers',
                framework: 'Rails',
                hookpoint: {
                    callback_class: 'HeadersInsertCB',
                    klass: 'Rack::Runtime',
                    method: 'call'
                },
                language: 'nodejs',
                name: 'insert_header_rack',
                priority: 99,
                test: false,
                title: 'Headers insertion'
            };

            expect(Reader.verifyRule(rule, true)).to.be.true();
            done();
        });
    });
});
