/**
 * Copyright (c) 2016 Sqreen. All Rights Reserved.
 * Please refer to our terms for more information: https://www.sqreen.io/terms.html
 */
'use strict';
const Code = require('code');
const Lab = require('lab');
const lab = exports.lab = Lab.script();

const describe = lab.describe;
const it = lab.it;
const expect = Code.expect;

const MatcherRule = require('../../../../lib/rules/rules-callback/matcherRule');

describe('MatcherRule', () => {

    describe('getMatcherList', () => {

        it('should get a list of matchers', { plan: 21 }, (done) => {

            const inputObject = [
                {
                },
                {
                    type: 'string',
                    value: 'hello'
                },
                {
                    type: 'string',
                    value: 'hello',
                    options: ['anywhere']
                },
                {
                    type: 'string',
                    value: 'hello',
                    options: ['starts_with']
                },
                {
                    type: 'string',
                    value: 'hello',
                    options: ['ends_with']
                },
                {
                    type: 'string',
                    value: 'hello',
                    options: ['equals']
                },
                {
                    type: 'regexp',
                    value: 'hello',
                    options: ['case_sensitive', 'multiline']
                },
                {
                    type: 'regexp',
                    value: 'hello'
                },
                {
                    name: 'i'
                },
                {
                    type: 'string',
                    value: 'hello',
                    options: ['case_sensitive', 'anywhere']
                }

            ];

            const matcherList = MatcherRule.getMatcherList(inputObject);

            expect(matcherList).to.be.an.array();
            expect(matcherList).to.have.length(inputObject.length);

            // a
            expect(matcherList[0].matcher('hello')).to.be.false();
            expect(matcherList[0].matcher('seeya')).to.be.false();

            // b
            expect(matcherList[1].matcher('iihellojj')).to.be.true();
            expect(matcherList[1].matcher('seeya')).to.be.false();

            // c
            expect(matcherList[2].matcher('iiHellojj')).to.be.true();
            expect(matcherList[2].matcher('seeya')).to.be.false();

            // d
            expect(matcherList[3].matcher('hellohoho')).to.be.true();
            expect(matcherList[3].matcher('seeyahello')).to.be.false();

            // e
            expect(matcherList[4].matcher('seeyahello')).to.be.true();
            expect(matcherList[4].matcher('hellohoho')).to.be.false();

            // f
            expect(matcherList[5].matcher('hello')).to.be.true();
            expect(matcherList[5].matcher('hellohoho')).to.be.false();

            // h
            expect(matcherList[6].matcher('Hello\nello')).to.be.false();
            expect(matcherList[6].matcher('Hnello')).to.be.false();

            // h
            expect(matcherList[7].matcher('hello')).to.be.true();
            expect(matcherList[7].matcher('Hello')).to.be.true();

            // i
            expect(matcherList[8].matcher()).to.be.false();

            //j
            expect(matcherList[9].matcher('hello')).to.be.true();
            expect(matcherList[9].matcher('Hello')).to.be.false();

            done();

        });
    });
});


